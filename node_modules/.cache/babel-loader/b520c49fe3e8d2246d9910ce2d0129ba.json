{"ast":null,"code":"var _jsxFileName = \"/Users/shahinfarzane/Downloads/Courses/Modern React with Redux [2020 Update]/[TutsNode.com] - Modern React with Redux [2020 Update]/21 Handling Authentication with React/streams/client/src/components/GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: null\n    };\n\n    this.onAuthChange = () => {\n      // this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n      if (isSignedIn) {\n        this.props.signIn();\n      } else {\n        this.props.signout();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: \"687254357629-sl159khia3v47iplictodqep2nljk5id.apps.googleusercontent.com\",\n        scope: \"email\"\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.setState({\n          isSignedIn: this.auth.isSignedIn.get()\n        });\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) {\n      return null;\n    } else if (this.state.isSignedIn) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.onSignOutClick,\n        className: \"ui red google button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"google icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }), \"Sign Out\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.onSignInClick,\n        className: \"ui red google button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"google icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }), \"Sign In with Google\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 12\n      }\n    }, this.renderAuthButton());\n  }\n\n}\n\nexport default connect(null, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/Users/shahinfarzane/Downloads/Courses/Modern React with Redux [2020 Update]/[TutsNode.com] - Modern React with Redux [2020 Update]/21 Handling Authentication with React/streams/client/src/components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","Component","state","isSignedIn","onAuthChange","props","signout","onSignInClick","auth","onSignOutClick","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","setState","get","listen","renderAuthButton","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,MAAR,EAAeC,OAAf,QAA6B,YAA7B;;AACA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAD+B;;AAAA,SAmBvCC,YAnBuC,GAmBxB,MAAM;AACnB;AACA,UAAGD,UAAH,EAAc;AACZ,aAAKE,KAAL,CAAWP,MAAX;AACC,OAFH,MAES;AACL,aAAKO,KAAL,CAAWC,OAAX;AACD;AACF,KA1BoC;;AAAA,SA6BvCC,aA7BuC,GA6BvB,MAAM;AACpB,WAAKC,IAAL,CAAUV,MAAV;AACD,KA/BsC;;AAAA,SAiCvCW,cAjCuC,GAiCtB,MAAM;AACrB,WAAKD,IAAL,CAAUT,OAAV;AACD,KAnCsC;AAAA;;AAGvCW,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACrCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CACGC,IADH,CACQ;AACJC,QAAAA,QAAQ,EACN,0EAFE;AAGJC,QAAAA,KAAK,EAAE;AAHH,OADR,EAMGC,IANH,CAMQ,MAAM;AACV,aAAKV,IAAL,GAAYG,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKC,QAAL,CAAc;AAAElB,UAAAA,UAAU,EAAE,KAAKK,IAAL,CAAUL,UAAV,CAAqBmB,GAArB;AAAd,SAAd;AACA,aAAKd,IAAL,CAAUL,UAAV,CAAqBoB,MAArB,CAA4B,KAAKnB,YAAjC;AACD,OAVH;AAWD,KAZD;AAaD;;AAoBDoB,EAAAA,gBAAgB,GAAG;AACjB,QAAI,KAAKtB,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAoC;AAClC,aAAO,IAAP;AACD,KAFD,MAEO,IAAI,KAAKD,KAAL,CAAWC,UAAf,EAA2B;AAChC,0BACE;AAAQ,QAAA,OAAO,EAAE,KAAKM,cAAtB;AAAsC,QAAA,SAAS,EAAC,sBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,aADF;AAMD,KAPM,MAOA;AACL,0BACE;AAAQ,QAAA,OAAO,EAAE,KAAKF,aAAtB;AAAqC,QAAA,SAAS,EAAC,sBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,wBADF;AAMD;AACF;;AAEDkB,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKD,gBAAL,EAAN,CAAP;AACD;;AA3DsC;;AA8DzC,eAAe3B,OAAO,CAAC,IAAD,EAAM;AAACC,EAAAA,MAAD;AAAQC,EAAAA;AAAR,CAAN,CAAP,CAA+BC,UAA/B,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {signIn,signOut} from '../actions'\nclass GoogleAuth extends React.Component {\n  state = { isSignedIn: null };\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client\n        .init({\n          clientId:\n            \"687254357629-sl159khia3v47iplictodqep2nljk5id.apps.googleusercontent.com\",\n          scope: \"email\",\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n    });\n  }\n\n  onAuthChange = () => {\n    // this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n    if(isSignedIn){\n      this.props.signIn()\n      } else {\n        this.props.signout()\n      }\n    }\n  \n\n  onSignInClick = () => {\n    this.auth.signIn();\n  }\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  }\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) {\n      return null;\n    } else if (this.state.isSignedIn) {\n      return (\n        <button onClick={this.onSignOutClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign Out\n        </button>\n      );\n    } else {\n      return (\n        <button onClick={this.onSignInClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign In with Google\n        </button>\n      );\n    }\n  }\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>;\n  }\n}\n\nexport default connect(null,{signIn,signOut})(GoogleAuth);\n"]},"metadata":{},"sourceType":"module"}